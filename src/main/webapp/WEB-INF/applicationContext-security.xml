<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:util="http://www.springframework.org/schema/util"
  xmlns:p="http://www.springframework.org/schema/p"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd
           http://www.springframework.org/schema/util
	   	   http://www.springframework.org/schema/util/spring-util-3.1.xsd"
           default-lazy-init="true">


	<http auto-config="true" use-expressions="true">
	
		<intercept-url pattern="/index.php" access="permitAll()" />
	 	<intercept-url pattern="/forgotpassword.php" access="permitAll()" />
	 	<intercept-url pattern="/resources/**" access="permitAll()" /> 	
	 	<intercept-url pattern="/**" access="isAuthenticated()" />
	 	
	   	<form-login login-page="/index.php"   
	   				default-target-url="/home.php"
					always-use-default-target="true"  
					authentication-failure-url="/index.php?authfailed=true"/>
					
	  	<logout invalidate-session="true"  
	  			logout-success-url="/" 
	  			logout-url="/j_spring_security_logout"
	  			delete-cookies="JSESSIONID" />	
	  			  	  
	</http>
	
	<global-method-security pre-post-annotations="enabled" />

   	<beans:bean id="secureDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
 		<beans:property name="driverClassName" value="${jdbc.driverClassName}"/>
        <beans:property name="url" value="${jdbc.url}"/>
        <beans:property name="username" value="${jdbc.username}"/>
        <beans:property name="password" value="${jdbc.password}"/>	
    </beans:bean>
    
     <beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    	<beans:property name="entityManagerFactory" ref="entityManagerFactory"/>
      	<beans:property name="dataSource" ref="secureDataSource"/>
    </beans:bean>    
    
<!--
================================================================================
EntityManagerFactory
================================================================================
-->
	<beans:bean id="entityManagerFactory" 
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          p:dataSource-ref="dataSource"
          p:packagesToScan-ref="jpaPackages"
		  p:jpaVendorAdapter-ref="hibernateVendor"
 		  p:jpaPropertyMap-ref="jpaPropertyMap" />
 		  
  	<util:list id="jpaPackages">
  		<beans:value>org.kemri.wellcome.dhisreport.api.model</beans:value>
  		<beans:value>org.hisp.dhis.dxf2.importsummary</beans:value>
  	</util:list>
  	
    <beans:bean id="hibernateVendor" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
	p:showSql="true"/>
	
	 <util:map id="jpaPropertyMap">
	 	<beans:entry key="hibernate.hbm2ddl.auto" value="update" />
	 	<beans:entry key="hibernate.dialect" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
	</util:map> 
    
	<beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
  		<beans:property name="passwordEncoder" ref="passwordEncoder"/>
	</beans:bean>
	
	<beans:bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
  		<beans:property name="providers">
    		<beans:list>
      			<beans:ref local="daoAuthenticationProvider" />
    		</beans:list>
  		</beans:property>
	</beans:bean>
	
	<beans:bean id="passwordEncoder"  class="org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder">
    	<beans:constructor-arg value="MD5" />    
	</beans:bean>
	
	<!--
	    Default Username/Password is
	        kwtrp/@Dmin2o13!
    -->
	<authentication-manager>
		<authentication-provider>
	        <password-encoder ref="passwordEncoder"/>
	        <user-service>
	            <user name="${security.username}" password="${security.password}" authorities="ROLE_ADMIN, ROLE_USER" />
		    </user-service>
		</authentication-provider> 
		<authentication-provider>
  			<password-encoder ref="passwordEncoder"/>
    		<jdbc-user-service data-source-ref="secureDataSource"/>
  		</authentication-provider>
	</authentication-manager>
	
	
</beans:beans>


