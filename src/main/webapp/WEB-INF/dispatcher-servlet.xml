<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/oxm
		http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd
		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/tx
	    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    	http://www.springframework.org/schema/jee 
		http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/data/jpa 
		http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd">

        
    <context:component-scan base-package="org.kemri.wellcome" /> 
    
    <!--
       Ensures that dispatcher servlet can be mapped to '/' and that static resources
       are still served by the containers default servlet. Requires Spring Framework
       3.0 or higher.
    -->
	<mvc:default-servlet-handler/>	
	
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

	<!-- Helps get the annotation based mappings and validations -->
	<mvc:annotation-driven />
	
	<!-- Activates @Scheduled and @Async annotations for scheduling -->
 	<task:annotation-driven executor="dhisExecutor" scheduler="dhisScheduler" />
 	
 	<!-- Defines a ThreadPoolTaskExecutor instance with configurable pool size, queue-capacity, keep-alive,
    and rejection-policy values. The id becomes the default thread name prefix -->
 	<task:executor id="dhisExecutor"
                pool-size="5-25"
                queue-capacity="100"/>
   
  	<!-- Defines a ThreadPoolTaskScheduler instance with configurable pool size.
    The id becomes the default thread name prefix. -->             
  	<task:scheduler id="dhisScheduler" pool-size="1"/>
	
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<jpa:repositories base-package="org.kemri.wellcome.dhisreport.repositories" />
	
	<mvc:view-controller path="/" view-name="index" />
	
	<!-- Instruct Spring to perform automatic transaction management on annotated 
		classes. The SimpleJdbcClinic implementation declares @Transactional annotations. -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- Instruct Spring to retrieve and apply @AspectJ aspects which are defined 
		as beans in this context. -->
		
	 
	<aop:aspectj-autoproxy />	
	<!-- Activates various annotations to be detected in bean classes: Spring's 
		@Required and @Autowired, as well as JSR 250's @PostConstruct, @PreDestroy 
		and @Resource (if available) and JPA's @PersistenceContext and @PersistenceUnit 
		(if available). -->
	<context:annotation-config />
	
	<aop:config />
    
    <!-- Allows for the interceptor to be plugged in -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
			<list>
				<ref bean="openEntityManagerInViewInterceptor" />
			</list>
		</property>
	</bean>
	 
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
      		<util:list id="beanList">
      			<ref bean="stringHttpMessageConverter"/>
        		<ref bean="jacksonMessageConverter" />
      		</util:list>
    	</property>
	</bean>
	
	<bean id="openEntityManagerInViewInterceptor"
		class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="multipartResolver"
	    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">	
	    <!-- one of the properties available; the maximum file size in bytes -->
	    <property name="maxUploadSize" value="1000000"/>
	</bean>
	
	<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter" />
		
	<bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
   		<property name="supportedMediaTypes" value="application/json" />  		
	</bean>
	
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="file" value="multipart/form-data"/>
				<entry key="php" value="text/html" />
				<entry key="htm" value="text/html" />
				<entry key="html" value="text/html" />	
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="atom" value="application/atom+xml" />
				<entry key="xls" value="application/x-excel" />
				<entry key="pdf" value="application/pdf" />							
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
					<property name="viewClass">
						<value>
							org.springframework.web.servlet.view.tiles2.TilesView
						</value>
					</property>
				</bean>
			</list>
		</property>	
	</bean>
    
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>
	
</beans>